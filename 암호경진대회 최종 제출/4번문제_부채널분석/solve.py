#!/usr/bin/python3

from Crypto.Util.number import *
from math import gcd

n = 0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551

m1 = "cryptography"
hm1 = 0xE06554818E902B4BA339F066967C0000DA3FCDA4FD7EB4EF89C124FA78BDA419
r1 = 0xF42A3ADB78BF22D9AA571FDFB0C93B415C8B50719C25B23F6F77DC299C01F2D7
s1 = 0x90A7F16EAFE3DB7923A07A6E8CF68F688100ABE3730A5416B37FA4BFBA7F5E22

m2 = "security"
hm2 = 0x5D2D3CEB7ABE552344276D47D36A8175B7AEB250A9BF0BF00E850CD23ECF2E43
r2 = 0xF42A3ADB78BF22D9AA571FDFB0C93B415C8B50719C25B23F6F77DC299C01F2D7
s2 = 0x865BF221DD856B991EB6EF7EF1E0D263215FC8D7F2283A22C1F927ABDCC35B5B

assert gcd(s1+s2, n) == 1
assert gcd(r1, n) == 1

k = (inverse(s1+s2, n) * (hm1 - hm2 + n*s2)) % n
d = ((k * s1 -hm1) * inverse(r1, n)) % n

print('d :',hex(d))